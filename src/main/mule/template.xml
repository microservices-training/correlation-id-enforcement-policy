<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:http-policy="http://www.mulesoft.org/schema/mule/http-policy"
      xmlns:http-transform="http://www.mulesoft.org/schema/mule/http-policy-transform"
      xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
 http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
               http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
               http://www.mulesoft.org/schema/mule/http-policy http://www.mulesoft.org/schema/mule/http-policy/current/mule-http-policy.xsd
                http://www.mulesoft.org/schema/mule/http-policy-transform http://www.mulesoft.org/schema/mule/http-policy-transform/current/mule-http-policy-transform.xsd http://www.mulesoft.org/schema/mule/http-policy-transform http://www.mulesoft.org/schema/mule/http-policy-transform/current/mule-http-policy-transform.xsd">

    <http-policy:proxy name="{{{policyId}}}-custom-policy">
        <http-policy:source propagateMessageTransformations="true">
        <try>
        		<set-variable variableName="generateIdFlag" value="{{{generate-id-flag}}}" />
        		<set-variable variableName="returnIdFlag" value="{{{return-id-flag}}}" />
        		<set-variable variableName="headerValue" value="#[attributes.headers['{{{correlation-id-header-name}}}']]" />

        		<logger level="DEBUG" message="{{{policyId}}}: Starting Correlation ID Enforcement for: {{{correlation-id-header-name}}}"></logger>

        		<choice>

        			<when expression="#[(vars.generateIdFlag as Boolean) == true]">

        				<logger level="DEBUG" message="{{{policyId}}}: Configured to Generate ID if not Present"></logger>

        				<choice>

        				<when expression="#[isEmpty(vars.headerValue) == true]">

        					<!-- Not Present - Generate The ID -->
	        				<set-variable variableName="correlationIdHeader" value="{{{correlation-id-header-name}}}"></set-variable>

	        				<ee:transform>
							<ee:message >
							</ee:message>
							<ee:variables>
								<ee:set-variable variableName="correlationId" ><![CDATA[%dw 2.0
				output application/java
				---
				uuid()]]></ee:set-variable>
							</ee:variables>
						</ee:transform>

							<!-- Put the Generated ID Into an Inbound Header -->

							<http-transform:add-request-headers-list>
							    <http-transform:new-headers>
							        <http-transform:header headerName="#[vars.correlationIdHeader]" headerValue="#[vars.correlationId]"/>
							    </http-transform:new-headers>
							</http-transform:add-request-headers-list>

        					<logger level="INFO" message="{{{policyId}}}: Header {{{correlation-id-header-name}}} Not Present - Generated Correlation ID: #[vars.correlationId]"></logger>

        				</when>

        				<otherwise>
        					<!-- Present - Parse the ID to the Variable -->
        					<set-variable variableName="correlationId" value="#[vars.headerValue]"></set-variable>
        					<logger level="DEBUG" message="{{{policyId}}}: Correlation ID Already Present: #[vars.headerValue]"></logger>
        				</otherwise>

        				</choice>

        			</when>

        			<otherwise>
        				<logger level="DEBUG" message="{{{policyId}}}: Configured to Not Check for an ID"></logger>
        				<set-variable variableName="correlationId" value="#[vars.headerValue]"></set-variable>
        				<logger level="DEBUG" message="{{{policyId}}}: Correlation ID Already Present: #[vars.headerValue]"></logger>
        			</otherwise>
        		</choice>



        		<error-handler>
        			<on-error-propagate
					type="ANY"
					logException="true">
					<logger level="ERROR"
						message="{{{policyId}}}: Error Enforcing a Correlation ID  - #[error.errorType] - #[error.description]"></logger>
					<ee:transform>
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
								output application/json
								---
								{
								"code": 500,
								"timestamp": now(),
								"type": "ERROR",
								"details": error.description default "An Error Occurred During Correlation ID Enforcement"
								}]]></ee:set-payload>
							</ee:message>
							<ee:variables>
							</ee:variables>
						</ee:transform>
						<http-transform:set-response statusCode="500">
							<http-transform:body>#[
								output application/json --- payload
								]</http-transform:body>
						</http-transform:set-response>
				</on-error-propagate>
			</error-handler>

        		</try>

        	<!-- Execute Application Flows or Next Policy-->
            <http-policy:execute-next/>


            <!-- On the Outbound Response - Ensure the Correlation ID Is Returned - If Requested-->
            <!-- Also Check if the Header Has Already Been Passed Back To Prevent Duplication of the HTTP Header-->
            <choice>
	            <when expression="#[(vars.returnIdFlag as Boolean) == true and isEmpty(attributes.headers['{{{correlation-id-header-name}}}']) == true]">

	            	<logger level="DEBUG" message="{{{policyId}}}: Correlation ID Outbound Header Not Already Present"></logger>

           			<http-transform:add-response-headers-list>
					    <http-transform:new-headers>
					        <http-transform:header headerName="{{{correlation-id-header-name}}}" headerValue="#[vars.correlationId]"/>
					    </http-transform:new-headers>
					</http-transform:add-response-headers-list>

	            </when>
	            <otherwise>
	            		<logger level="DEBUG" message="{{{policyId}}}: Correlation ID Outbound Header Already Present"></logger>
	            </otherwise>
            </choice>


        </http-policy:source>
    </http-policy:proxy>
</mule>
